{{- if eq .Values.gitlab.enabled true }}
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: gitlab-operator-kubernetes
  namespace: gitlab-system
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  channel: {{ .Values.gitlab.channel }}
{{- if $.Values.gitlab.startingCSV }}
  startingCSV: {{ .Values.gitlab.startingCSV }}
{{- end }}
  installPlanApproval: Automatic
  name: gitlab-operator-kubernetes
  source: {{ .Values.gitlab.source | default "certified-operators" }}
  sourceNamespace: openshift-marketplace
---
apiVersion: v1
kind: Namespace
metadata:
  name: gitlab-system
  annotations:
    argocd.argoproj.io/sync-wave: "1"
---
apiVersion: operators.coreos.com/v1alpha2
kind: OperatorGroup
metadata:
  name: gitlab-operator-kubernetes
  namespace: gitlab-system
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  targetNamespaces:
    - gitlab-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argocd-gitlab-writer
  namespace: gitlab-system
  annotations:
    argocd.argoproj.io/sync-wave: "2"
rules:
  - apiGroups:
      - "apps.gitlab.com"
    resources:
      - "gitlabs"
      - "gitlabs/status"
    verbs:
      - "create"
      - "get"
      - "list"
      - "watch"
      - "update"
      - "patch"
      - "delete"
  - apiGroups: [""] # "" represents the core API group, which ServiceAccounts belong to
    resources: ["serviceaccounts"]
    verbs:
      - "create"
      - "get"
      - "list"
      - "watch"
      - "update"
      - "patch"
      - "delete"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argocd-gitlab-binding
  namespace: gitlab-system
  annotations:
    argocd.argoproj.io/sync-wave: "2"
subjects:
  - kind: ServiceAccount
    name: openshift-gitops-argocd-application-controller
    namespace: openshift-gitops
roleRef:
  kind: Role
  name: argocd-gitlab-writer
  apiGroup: rbac.authorization.k8s.io
---
# New ClusterRole for IngressClass
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argocd-ingressclass-creator
  # No namespace here, as it's cluster-scoped
rules:
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingressclasses"]
    verbs: ["create", "get", "list", "watch", "update", "patch", "delete"]
---
# New ClusterRoleBinding for IngressClass
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argocd-ingressclass-binding-cluster
subjects:
  - kind: ServiceAccount
    name: openshift-gitops-argocd-application-controller
    namespace: openshift-gitops
roleRef:
  kind: ClusterRole
  name: argocd-ingressclass-creator # This must match the ClusterRole name above
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "2"
  name: gitlab-nginx
spec:
  controller: k8s.io/ingress-nginx
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitlab-nginx-scc
  namespace: gitlab-system
  annotations:
    argocd.argoproj.io/sync-wave: "2" 
---
# ---
# # Sync Wave 2: ClusterRoleBinding to allow ServiceAccount to use the SCC
# # This binds gitlab-nginx-scc ServiceAccount to the custom SCC
# # Note: SCC definition (gitlab-nginx-scc) must be applied separately as a Cluster-Scoped Resource.
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRoleBinding
# metadata:
#   name: gitlab-nginx-scc-use-binding
#   annotations:
#     argocd.argoproj.io/sync-wave: "2"
# subjects:
# - kind: ServiceAccount
#   name: gitlab-nginx-scc # VERIFY THIS IS THE CORRECT SERVICE ACCOUNT NAME
#   namespace: gitlab-system
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: system:openshift:scc:gitlab-nginx-scc # Refers to the SCC by name as a ClusterRole
# ---
# # SCC Definition - THIS MUST BE APPLIED SEPARATELY TO THE CLUSTER!
# apiVersion: security.openshift.io/v1
# kind: SecurityContextConstraints
# metadata:
#   name: gitlab-nginx-scc
# runAsUser:
#   type: MustRunAs
#   uid: 101 # Allow running as UID 101
# seLinuxContext:
#   type: RunAsAny
# fsGroup:
#   type: RunAsAny
# supplementalGroups:
#   type: RunAsAny
# allowPrivilegeEscalation: true
# readOnlyRootFilesystem: false
---
apiVersion: apps.gitlab.com/v1beta1
kind: GitLab
metadata:
  name: gitlab
  namespace: gitlab-system
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  chart:
    values:
      certmanager:
        install: false
        #installCRDs: false
      global:
        hosts:
          domain: gitlab.apps.rosa.zy23e-kp42c-iym.ktcw.p3.openshiftapps.com
          https: true
          gitlabVersion: "18.2.1"
        ingress:
          configureCertmanager: false
          tls:
            secretName: null
        edition: ce
        postgresql:
          primary:
            extendedConfiguration: max_connections = 200
      #nginx-ingress:
      #  enabled: false
      gitlab-runner:
        install: false
    version: '9.2.1'
{{- end }}